@echo off

set "CONFIG_FILE=config.txt"
if not exist "%CONFIG_FILE%" (
    echo Error: Configuration file not found.
    pause
    exit /b 1
)

call :readConfig

set BACKUP_DIR=%CONFIG_BACKUP_DIR%
set CURRENT_DATE=%date:~10,4%%date:~4,2%%date:~7,2%
set BACKUP_FILE=%BACKUP_DIR%\backup_%CURRENT_DATE%.sql
set LOG_FILE=%BACKUP_DIR%\backup_log.txt

echo Backup script started at %time% on %date% >> %LOG_FILE%

echo Checking database connection...
mysql -u%MYSQL_USER% -p%MYSQL_PASSWORD% -h%MYSQL_HOST% -e "SELECT 1" > nul 2>> %LOG_FILE%
if %errorlevel% neq 0 (
    echo Error: Unable to connect to the database. Check your MySQL credentials and server availability.
    echo Script completed with errors at %time% on %date% >> %LOG_FILE%
    pause
    exit /b 1
) else (
    echo Database connection successful.
)

echo Running command: mysqldump -u%MYSQL_USER% -p******** -h%MYSQL_HOST% --databases %MYSQL_DATABASE% > %BACKUP_FILE% 2>> %LOG_FILE%
mysqldump -u%MYSQL_USER% -p%MYSQL_PASSWORD% -h%MYSQL_HOST% --databases %MYSQL_DATABASE% > %BACKUP_FILE% 2>> %LOG_FILE%
set "EXIT_CODE=%errorlevel%"

if %EXIT_CODE% equ 0 (
    echo MySQL backup completed successfully.
) else (
    echo Error: MySQL backup failed with exit code %EXIT_CODE%.
    echo Script completed with errors at %time% on %date% >> %LOG_FILE%
    pause
    exit /b 1
)

echo Backup script completed at %time% on %date% >> %LOG_FILE%
pause
exit /b 0

:readConfig
for /f "tokens=1,* delims==" %%A in (%CONFIG_FILE%) do (
    set "%%A=%%B"
)
exit /b 0




@echo off

REM Run your command here
your_command_here

REM Check the errorlevel
if %errorlevel% equ 0 (
    echo Command executed successfully.
) else (
    echo Error: Command failed with exit code %errorlevel%.
)

pause


@echo off

set "SQL_FILE=path\to\your\file.sql"

for %%I in ("%SQL_FILE%") do set "FILE_SIZE=%%~zI"

echo Size of %SQL_FILE% is %FILE_SIZE% bytes.

pause

#!/bin/bash

MYSQL_USER="your_username"
MYSQL_PASSWORD="your_password"
MYSQL_DATABASE="your_database"
OUTPUT_DIR="/path/to/backup/directory"

# Set the maximum size for each backup file (20MB in this example)
MAX_FILE_SIZE_MB=20
MAX_FILE_SIZE=$((MAX_FILE_SIZE_MB * 1024 * 1024))

# Set the filename prefix
FILENAME_PREFIX="backup"

# Set the date format for the backup files
DATE_FORMAT=$(date +"%Y%m%d%H%M%S")

# Generate the output file name
OUTPUT_FILE="$OUTPUT_DIR/$FILENAME_PREFIX"_"$DATE_FORMAT.sql.gz"

# Perform the MySQL backup
mysqldump -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE | gzip > $OUTPUT_FILE

# Split the backup into multiple files if it exceeds the maximum size
split --line-bytes=$MAX_FILE_SIZE $OUTPUT_FILE "$OUTPUT_DIR/$FILENAME_PREFIX"_"$DATE_FORMAT"_

# Remove the original backup file
rm $OUTPUT_FILE

echo "Backup completed successfully."


